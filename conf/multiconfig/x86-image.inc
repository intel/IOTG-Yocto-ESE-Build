require ./x86-common.inc
# default kernel
##### IMPORTANT: WHEN MODIFYING THIS FILE, tmp-glic/cache may get outdated, delete it before running bitbake again
# you may also need to run cleansstate on any images you built earlier

MACHINE = "intel-corei7-64"

SSTATE_DIR = "${TOPDIR}/sstate-cache-${BB_CURRENT_MC}"
TMPDIR="${TOPDIR}/tmp-${BB_CURRENT_MC}"

include ${SELECTABLE_KERNEL_DEFAULT}

# To add support for signed image installation to non-removable media,
# user needs the parted tool and custom scripts
#IMAGE_INSTALL_append = " parted secboot-script"
# To boot up signed image from boot medium with boot and rootfs located
# at different partitions, DISK_SIGNATURE_UUID is required.
#DISK_SIGNATURE_UUID = "f1f27ee1-1898-496e-bcb8-18188fc08072"
DISK_SIGNATURE_UUID = ""

#### size configuration
IMAGE_OVERHEAD_FACTOR = "1.0"
IMAGE_FSTYPES = "wic wic.bmap"
WKS_ROOT_SIZE_MB ??= "12288"
WKS_DATA_SIZE_MB ??= "12288"
WKS_BOOT_SIZE_MB ??= "128"
WKS_SWAP_SIZE_MB ??= "4096"
WKS_ROOT_FS = "ext4"
# GPT Partition type for Linux root
WKS_ROOT_TYPE ?= "EBD0A0A2-B9E5-4433-87C0-68B6B72699C7"
WKS_ROOT_TYPE_x86 = "44479540-F297-41B2-9AF7-D131D5F0458A"
WKS_ROOT_TYPE_x86-64 = "4F68BCE3-E8CD-4DB1-96E7-FBCAF984B709"
WKS_ROOT_TYPE_arm = "69DAD710-2CE4-4E3C-B16C-21A1D49ABED3"
WKS_ROOT_TYPE_aarch64 = "B921B045-1DF0-41C3-AF44-4C6F280D3FAE"
WKS_FILE = "mender-io.wks.in"

#### Mender settings
MENDER_FEATURES_DISABLE_append = " mender-image-uefi mender-systemd"
INHERIT += "mender-full"
# missing files?
PACKAGECONFIG_append_pn-mender = " modules"
# MENDER_ARTIFACT_NAME needs to be defined globally
MENDER_ARTIFACT_NAME = "Release-${DATETIME}"
MENDER_ARTIFACT_NAME[vardepsexclude] = "DATETIME"
MENDER_IMAGE_ROOTFS_MAXSIZE_DEFAULT = ""
# Mender update image size calculation
MENDER_STORAGE_TOTAL_SIZE_MB = "32768"
IMAGE_ROOTFS_SIZE = "${@int(round(${WKS_ROOT_SIZE_MB} * 1024 - (${IMAGE_ROOTFS_EXTRA_SPACE})))}"
IMAGE_ROOTFS_MAXSIZE = "${@int(round(${WKS_ROOT_SIZE_MB} * 1024))}"
# mender is not PARTUUID aware, skip fstab updating, mounting already handled via mender-initramfs
ROOTFS_POSTPROCESS_COMMAND_remove = "mender_update_fstab_file;"
# from conf/image-uefi.conf, make sure they use the same values
MENDER_BOOT_PART_MOUNT_LOCATION = "${EFI_PREFIX}"
# mender is used in offline mode only
SYSTEMD_AUTO_ENABLE_pn-mender = "disable"
ARTIFACTIMG_FSTYPE = "${WKS_ROOT_FS}"
IMAGE_ROOTFS_EXCLUDE_PATH_append = " etc/"
# Mender relabeling post-update script, used by in-band manageability feature
IMAGE_INSTALL_append = " mender-relabel mender-reconf"
# Mender helper init
INITRAMFS_IMAGE_NAME = "mender-initramfs"
INITRAMFS_IMAGE_RECIPE = "mc:${BB_CURRENT_MC}:x86-musl:${INITRAMFS_IMAGE_NAME}"
INITRAMFS_IMAGE_PATH = "${TOPDIR}/tmp-x86-musl-musl/deploy/images/${MACHINE}/${INITRAMFS_IMAGE_NAME}-${MACHINE}.cpio"
# Mender boot hints
APPEND += "mender.efi=PARTLABEL=efi mender.primary=PARTLABEL=primary mender.secondary=PARTLABEL=secondary mender.data=PARTLABEL=data mender.swap=PARTLABEL=swap resume=PARTLABEL=swap"

##### installer complex
# for installer
IMAGE_FSTYPES_append = " squashfs-lz4"
# Mender image: move /etc to /data/persistent/etc and post-processing steps
IMAGE_FEATURES_append = " ese-grub-image ese-mender-persistent ese-shim-image"
IMGCLASSES_append = " ese-image-features"
# Mender grub configuration
## grub.cfg is generated by mender-grubconf but some grub-mender-grubenv still needed to switch bootloader config
PREFERRED_PROVIDER_virtual/grub-bootconf = "mender-grubconf"
IMAGE_INSTALL_append = " grub-mender-grubenv mender-grubconf"
# compatibility symlinks independent of kernel version strings for grub configuration
KERNEL_CLASSES_append = " kernel-image-symlinks"

# compressed kernel modules to save space
## NOTICE: kmod must be built to support the compression scheme used or else module loading will fail
## NOTICE: Dunfell kmod recipe lacks the PACKAGECONFIG[xz] support, even though kmod itself can support xz
## NOTICE: ese-main kmod has backported support for xz
DISTRO_FEATURES_append = " kernel-compress-modules"

# grubconf settings (does not handle kernel image dependecies)
# MENDER_GRUBCONF_KERNELS_MENU[kernel recipe name] = "menu entry names..."
# MENDER_GRUBCONF_KERNELS[menu entry name] = "command line additions...."
RT_KERNEL_COMMON_ARGS = "processor.max_cstate=0 intel.max_cstate=0 processor_idle.max_cstate=0 intel_idle.max_cstate=0 clocksource=tsc tsc=reliable nowatchdog intel_pstate=disable idle=poll noht isolcpus=2,3 rcu_nocbs=all rcupdate.rcu_cpu_stall_suppress=1 rcu_nocb_poll irqaffinity=0 i915.enable_rc6=0 i915.enable_dc=0 i915.disable_power_well=0 mce=off hpet=disable numa_balancing=disable igb.blacklist=no efi=runtime art=virtallow"

# internal testing stub
include ${TOPDIR}/conf/internal/sdk.conf
include ${TOPDIR}/conf/internal/kernel.conf
